/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import type { CreateFileRoute, FileRoutesByPath } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as MainRouteImport } from './routes/main'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProjectsIndexRouteImport } from './routes/projects/index'
import { Route as ProjectsBacklogRouteImport } from './routes/projects/backlog'
import { Route as ProjectsIdRouteImport } from './routes/projects/$id'

const MainRoute = MainRouteImport.update({
  id: '/main',
  path: '/main',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsIndexRoute = ProjectsIndexRouteImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsBacklogRoute = ProjectsBacklogRouteImport.update({
  id: '/projects/backlog',
  path: '/projects/backlog',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsIdRoute = ProjectsIdRouteImport.update({
  id: '/projects/$id',
  path: '/projects/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/main': typeof MainRoute
  '/projects/$id': typeof ProjectsIdRoute
  '/projects/backlog': typeof ProjectsBacklogRoute
  '/projects': typeof ProjectsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/main': typeof MainRoute
  '/projects/$id': typeof ProjectsIdRoute
  '/projects/backlog': typeof ProjectsBacklogRoute
  '/projects': typeof ProjectsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/main': typeof MainRoute
  '/projects/$id': typeof ProjectsIdRoute
  '/projects/backlog': typeof ProjectsBacklogRoute
  '/projects/': typeof ProjectsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/main'
    | '/projects/$id'
    | '/projects/backlog'
    | '/projects'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/main'
    | '/projects/$id'
    | '/projects/backlog'
    | '/projects'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/main'
    | '/projects/$id'
    | '/projects/backlog'
    | '/projects/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  MainRoute: typeof MainRoute
  ProjectsIdRoute: typeof ProjectsIdRoute
  ProjectsBacklogRoute: typeof ProjectsBacklogRoute
  ProjectsIndexRoute: typeof ProjectsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/main': {
      id: '/main'
      path: '/main'
      fullPath: '/main'
      preLoaderRoute: typeof MainRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects': {
      id: '/projects'
      path: ''
      fullPath: '/projects'
      preLoaderRoute: unknown
      parentRoute: typeof rootRouteImport
    }
    '/projects/$id': {
      id: '/projects/$id'
      path: '/projects/$id'
      fullPath: '/projects/$id'
      preLoaderRoute: typeof ProjectsIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/backlog': {
      id: '/projects/backlog'
      path: '/projects/backlog'
      fullPath: '/projects/backlog'
      preLoaderRoute: typeof ProjectsBacklogRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/': {
      id: '/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

declare module './routes/index' {
  const createFileRoute: CreateFileRoute<
    '/',
    FileRoutesByPath['/']['parentRoute'],
    FileRoutesByPath['/']['id'],
    FileRoutesByPath['/']['path'],
    FileRoutesByPath['/']['fullPath']
  >
}
declare module './routes/about' {
  const createFileRoute: CreateFileRoute<
    '/about',
    FileRoutesByPath['/about']['parentRoute'],
    FileRoutesByPath['/about']['id'],
    FileRoutesByPath['/about']['path'],
    FileRoutesByPath['/about']['fullPath']
  >
}
declare module './routes/main' {
  const createFileRoute: CreateFileRoute<
    '/main',
    FileRoutesByPath['/main']['parentRoute'],
    FileRoutesByPath['/main']['id'],
    FileRoutesByPath['/main']['path'],
    FileRoutesByPath['/main']['fullPath']
  >
}
declare module './routes/projects' {
  const createFileRoute: CreateFileRoute<
    '/projects',
    FileRoutesByPath['/projects']['parentRoute'],
    FileRoutesByPath['/projects']['id'],
    FileRoutesByPath['/projects']['path'],
    FileRoutesByPath['/projects']['fullPath']
  >
}
declare module './routes/projects/$id' {
  const createFileRoute: CreateFileRoute<
    '/projects/$id',
    FileRoutesByPath['/projects/$id']['parentRoute'],
    FileRoutesByPath['/projects/$id']['id'],
    FileRoutesByPath['/projects/$id']['path'],
    FileRoutesByPath['/projects/$id']['fullPath']
  >
}
declare module './routes/projects/backlog' {
  const createFileRoute: CreateFileRoute<
    '/projects/backlog',
    FileRoutesByPath['/projects/backlog']['parentRoute'],
    FileRoutesByPath['/projects/backlog']['id'],
    FileRoutesByPath['/projects/backlog']['path'],
    FileRoutesByPath['/projects/backlog']['fullPath']
  >
}
declare module './routes/projects/index' {
  const createFileRoute: CreateFileRoute<
    '/projects/',
    FileRoutesByPath['/projects/']['parentRoute'],
    FileRoutesByPath['/projects/']['id'],
    FileRoutesByPath['/projects/']['path'],
    FileRoutesByPath['/projects/']['fullPath']
  >
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  MainRoute: MainRoute,
  ProjectsIdRoute: ProjectsIdRoute,
  ProjectsBacklogRoute: ProjectsBacklogRoute,
  ProjectsIndexRoute: ProjectsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
